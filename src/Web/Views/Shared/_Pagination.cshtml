@model PaginationInfoViewModel

@{ 
    var prevData = Context.Request.Query.ToDictionary(x => x.Key, x => x.Value.ToString());
    if (!prevData.ContainsKey("pageId"))
        prevData.Add("pageId", null);
    prevData["pageId"] = (Model.CurrentPage - 1).ToString();
    var nextData = Context.Request.Query.ToDictionary(x => x.Key, x => x.Value.ToString());
    if (!nextData.ContainsKey("pageId"))
        nextData.Add("pageId", null);
    nextData["pageId"] = (Model.CurrentPage + 1).ToString();
}

<div class="row align-items-baseline">
    <div class="col-2">
        <a asp-all-route-data="prevData" class="btn btn-warning @(Model.HasPrevious ? "" : "disabled")">
            <i class="fas fa-arrow-left"></i>
        </a>
    </div>
    <div class="col-8 text-center">
        Showing @Model.ItemsOnPage of @Model.TotalItems products (Page @Model.CurrentPage/@Model.TotalPages)
    </div>
    <div class="col-2 text-right">
        <a asp-all-route-data="nextData" class="btn btn-warning @(Model.HasNext ? "" : "disabled")">
            <i class="fas fa-arrow-right"></i>
        </a>
    </div>
</div>